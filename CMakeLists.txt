CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(phpcpp)

# Use CMake File with following options
# PHPCPP_COMPILE_TS     Set flag if PHP was compiled with thread safe
# PHPCPP_MSVCRT_STATIC  Set flag if you want to compile the MSVC runtime as a static library
# PHPCPP_ARCH           Set to "x86_64" if architecture and PHP was compiled under x64 or "x86" for 32 bit
# PHPCPP_PHP_PATH       The path to PHP sources

set(CMAKE_CXX_STANDARD 11)
LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR})

IF(CMAKE_BUILD_TYPE MATCHES DEBUG)
  ADD_DEFINITIONS(-DZEND_DEBUG=1)
ELSE()
  ADD_DEFINITIONS(-DZEND_DEBUG=0)
ENDIF()

IF (PHPCPP_COMPILE_TS)
  ADD_DEFINITIONS(-DZTS)
ENDIF()

ADD_DEFINITIONS(-D_MSC_STDINT_H_)
ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ADD_DEFINITIONS(-DBUILDING_PHPCPP)
ADD_DEFINITIONS(-DZEND_WIN32_KEEP_INLINE)

IF (NOT EXISTS "${PHPCPP_PHP_PATH}/main/php.h")
  message(SEND_ERROR "The PHPCPP_PHP_PATH variable does not contain PHP sources path")
ENDIF()

IF (MSVC)
  # Should compile MSVC runtime static or dll
  IF (PHPCPP_MSVCRT_STATIC)
    MESSAGE("Compile PHPCPP with static runtime")

    SET(CMAKE_CXX_FLAGS_RELEASE         "${CMAKE_CXX_FLAGS_RELEASE} /MT")
    SET(CMAKE_CXX_FLAGS_DEBUG           "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO  "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MT")

  ELSE()
    MESSAGE("Compile PHPCPP with dynamic runtime")

    SET(CMAKE_CXX_FLAGS_RELEASE         "${CMAKE_CXX_FLAGS_RELEASE} /MD")
    SET(CMAKE_CXX_FLAGS_DEBUG           "${CMAKE_CXX_FLAGS_DEBUG} /MDd")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO  "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MD")

  ENDIF()

  IF (${PHPCPP_ARCH} STREQUAL "x86_64")
    ADD_DEFINITIONS(-DPHP_WIN32 -DZEND_WIN32)
  ELSE()
    ADD_DEFINITIONS(-DPHP_WIN32 -DZEND_WIN32 -D_USE_32BIT_TIME_T)
  ENDIF()

  SET(ADDITIONAL_COMPILER_FLAGS "/W3")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ADDITIONAL_COMPILER_FLAGS}")
ENDIF ()

INCLUDE_DIRECTORIES(
        "${PHPCPP_PHP_PATH}/"
        "${PHPCPP_PHP_PATH}/main"
        "${PHPCPP_PHP_PATH}/Zend"
        "${PHPCPP_PHP_PATH}/TSRM"
        "${PHPCPP_PHP_PATH}/ext"
        "${PHPCPP_PHP_PATH}/build/main"
        "${PHPCPP_PHP_PATH}/build/Zend"
)
SET(PHP_LIBS "php")
SET(PHP_LIB_PATH "")

IF (${PHPCPP_ARCH} STREQUAL "x86_64")
  SET(PHP_LIB_PATH "x64/")
ENDIF()

IF(CMAKE_BUILD_TYPE MATCHES DEBUG)
  IF (PHPCPP_COMPILE_TS)
    SET(PHP_LIBS      ${PHP_LIBS} "php7ts_debug")
    SET(PHP_LIB_PATH  "${PHP_LIB_PATH}Debug_TS")
  ELSE()
    SET(PHP_LIBS      ${PHP_LIBS} "php7_debug")
    SET(PHP_LIB_PATH  "${PHP_LIB_PATH}Debug")
  ENDIF()
ELSE()
  IF (PHPCPP_COMPILE_TS)
    SET(PHP_LIBS      ${PHP_LIBS} "php7ts")
    SET(PHP_LIB_PATH  "${PHP_LIB_PATH}Release_TS")
  ELSE()
    SET(PHP_LIBS      ${PHP_LIBS} "php7")
    SET(PHP_LIB_PATH  "${PHP_LIB_PATH}Release")
  ENDIF()
ENDIF()

FILE(GLOB PHPCPP_COMMON_SOURCES common/*.cpp)
FILE(GLOB PHPCPP_COMMON_HEADERS common/*.h)
FILE(GLOB PHPCPP_ZEND_SOURCES zend/*.cpp)
FILE(GLOB PHPCPP_ZEND_HEADERS zend/*.h)
FILE(GLOB PHPCPP_HEADERS_INCLUDE include/phpcpp/*.h)


LINK_DIRECTORIES(${PHP_LIB_PATH})

IF (PHPCPP_SHARED)
  ADD_LIBRARY(phpcpp SHARED
          ${PHPCPP_COMMON_HEADERS}
          ${PHPCPP_COMMON_SOURCES}
          ${PHPCPP_HEADERS_INCLUDE}
          ${PHPCPP_ZEND_HEADERS}
          ${PHPCPP_ZEND_SOURCES}
          phpcpp.h
          )
ELSE()
  ADD_LIBRARY(phpcpp STATIC
          ${PHPCPP_COMMON_HEADERS}
          ${PHPCPP_COMMON_SOURCES}
          ${PHPCPP_HEADERS_INCLUDE}
          ${PHPCPP_ZEND_HEADERS}
          ${PHPCPP_ZEND_SOURCES}
          phpcpp.h
          )
ENDIF()

SET_TARGET_PROPERTIES(phpcpp
        PROPERTIES
        ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}"
        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}"
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}"
        )
